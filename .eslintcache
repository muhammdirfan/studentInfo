[{"E:\\React\\StudentInfo\\src\\Layouts\\Home\\index.js":"1","E:\\React\\StudentInfo\\src\\index.js":"2","E:\\React\\StudentInfo\\src\\Components\\Form\\index.js":"3","E:\\React\\StudentInfo\\src\\store\\index.js":"4","E:\\React\\StudentInfo\\src\\Reducer\\index.js":"5","E:\\React\\StudentInfo\\src\\Reducer\\studentReducer\\index.js":"6","E:\\React\\StudentInfo\\src\\Actions\\index.js":"7","E:\\React\\StudentInfo\\src\\Actions\\updateStudent.js":"8","E:\\React\\StudentInfo\\src\\Actions\\getStudent.js":"9","E:\\React\\StudentInfo\\src\\Actions\\AddStudent.js":"10","E:\\React\\StudentInfo\\src\\Actions\\DeleteStudent.js":"11","E:\\React\\StudentInfo\\src\\Apis\\api_url.js":"12","E:\\React\\StudentInfo\\src\\Apis\\studentInfo.js":"13","E:\\React\\StudentInfo\\src\\Components\\UpdateForm\\index.js":"14"},{"size":3970,"mtime":1613662557218,"results":"15","hashOfConfig":"16"},{"size":809,"mtime":1613801350364,"results":"17","hashOfConfig":"16"},{"size":3186,"mtime":1613211639427,"results":"18","hashOfConfig":"16"},{"size":127,"mtime":1612281831473,"results":"19","hashOfConfig":"16"},{"size":213,"mtime":1612280767288,"results":"20","hashOfConfig":"16"},{"size":1519,"mtime":1613661002148,"results":"21","hashOfConfig":"16"},{"size":240,"mtime":1612281712174,"results":"22","hashOfConfig":"16"},{"size":147,"mtime":1612281760986,"results":"23","hashOfConfig":"16"},{"size":138,"mtime":1612281755273,"results":"24","hashOfConfig":"16"},{"size":138,"mtime":1612281776293,"results":"25","hashOfConfig":"16"},{"size":147,"mtime":1612281781895,"results":"26","hashOfConfig":"16"},{"size":92,"mtime":1613661142878,"results":"27","hashOfConfig":"16"},{"size":1810,"mtime":1613659675433,"results":"28","hashOfConfig":"16"},{"size":4893,"mtime":1613494267433,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q6ex98",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},"E:\\React\\StudentInfo\\src\\Layouts\\Home\\index.js",["65","66","67"],"E:\\React\\StudentInfo\\src\\index.js",[],"E:\\React\\StudentInfo\\src\\Components\\Form\\index.js",[],["68","69"],"E:\\React\\StudentInfo\\src\\store\\index.js",[],["70","71"],"E:\\React\\StudentInfo\\src\\Reducer\\index.js",[],"E:\\React\\StudentInfo\\src\\Reducer\\studentReducer\\index.js",[],"E:\\React\\StudentInfo\\src\\Actions\\index.js",[],["72","73"],"E:\\React\\StudentInfo\\src\\Actions\\updateStudent.js",[],"E:\\React\\StudentInfo\\src\\Actions\\getStudent.js",[],["74","75"],"E:\\React\\StudentInfo\\src\\Actions\\AddStudent.js",[],["76","77"],"E:\\React\\StudentInfo\\src\\Actions\\DeleteStudent.js",[],"E:\\React\\StudentInfo\\src\\Apis\\api_url.js",[],"E:\\React\\StudentInfo\\src\\Apis\\studentInfo.js",["78","79"],"import api_url from './api_url';\r\nimport axios from 'axios';\r\n\r\n\r\nclass studentInfo {\r\n\r\n    async addStudentInfo(studentData, props){\r\n        try {\r\n            await axios.post(api_url + \"addStudents\", \r\n            studentData,\r\n            {\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n            }) \r\n                .then((response) => {\r\n                    console.log(response);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async getStudentData(props) {\r\n        try {\r\n            const responses = await axios.get(api_url + \"getStudentList\");\r\n            console.log(responses);\r\n            if(responses.data.response == \"success\") {\r\n                props.getStudent(responses.data.message);\r\n            } else {\r\n                props.getStudent([]);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async updateStudentInfo(studentData, props){\r\n        try {\r\n            await axios.post(api_url + \"updateStudents\", \r\n            studentData,\r\n            {\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n            }) \r\n                .then((response) => {\r\n                    console.log(response);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async deleteStudentData(studentid, props) {\r\n        try {\r\n            const responses = await axios.get(api_url + \"deleteStudent?id=\"+studentid);\r\n            console.log(responses);\r\n            if(responses.data.response == \"success\" ) {\r\n                props.deleteStudent(studentid);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default studentInfo;","E:\\React\\StudentInfo\\src\\Components\\UpdateForm\\index.js",["80","81","82","83","84","85","86","87"],"import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport studentInfo from '../../Apis/studentInfo';\r\n\r\nconst studentinfo = new studentInfo();\r\n\r\nconst UpdateForm = (props) => {\r\n\r\n    const [Id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [reg_no, setRegNo] = useState(\"\");\r\n    const [cellno, setCellNo] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [class_name, setClassName] = useState(\"\");\r\n\r\n    // console.log(props);\r\n\r\n    const submitData = () => {\r\n        if(name === null || email === null || reg_no === null || cellno === null || gender === null || address === null || class_name === null){\r\n            alert(\"Please Fill all the feild\");\r\n        }\r\n        else{\r\n\r\n            const datavalues={\r\n                id:props.datavalues.id,\r\n                name:name,\r\n                email:email,\r\n                reg_no:reg_no,\r\n                cellno:cellno,\r\n                gender:gender,\r\n                address:address,\r\n                class_name:class_name,\r\n            };\r\n\r\n            console.log(datavalues, 'datavalues testing');\r\n            studentinfo.updateStudentInfo(datavalues, props);\r\n            // props.addstudent(datavalues);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Form className=\"m-3\">\r\n         <Form.Group controlId=\"formGroupName\">\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Name\" onChange={ (e) => {\r\n\r\n              if(e.target.value === \"\"){\r\n                setName(e.target.defaultValue) \r\n              }\r\n              else{\r\n                setName(e.target.value)\r\n              }\r\n            }} defaultValue={props.datavalues.name}/>\r\n         </Form.Group>\r\n         <Form.Group controlId=\"formGroupEmail\">\r\n         <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Email\" onChange={(e)=> {\r\n              if(e.target.value == ''){\r\n                setEmail(e.target.defaultValue) \r\n              }\r\n              else{\r\n                setEmail(e.target.value)\r\n              }\r\n          }} defaultValue={props.datavalues.email}/>\r\n         </Form.Group>\r\n         <Form.Group controlId=\"formGroupRegno\">\r\n         <Form.Label>Reg No</Form.Label>\r\n          <Form.Control type=\"number\" placeholder=\"Enter Reg No\" onChange={(e)=> {\r\n              if(e.target.value == ''){\r\n                setRegNo(e.target.defaultValue) \r\n              }\r\n              else{\r\n                setRegNo(e.target.value)\r\n              }\r\n          }} defaultValue={props.datavalues.reg_no}/>\r\n         </Form.Group>\r\n         <Form.Group controlId=\"formGroupCellno\">\r\n         <Form.Label>Cell No</Form.Label>\r\n          <Form.Control type=\"number\" placeholder=\"Enter Cell No\" onChange={(e)=> {\r\n               if(e.target.value == ''){\r\n                setCellNo(e.target.defaultValue) \r\n              }\r\n              else{\r\n                setCellNo(e.target.value)\r\n              }\r\n          }} defaultValue={props.datavalues.cellno}/>\r\n         </Form.Group>\r\n         <Form.Group controlId=\"formGroupAddress\">\r\n         <Form.Label>Address</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Address\" onChange={(e)=> {\r\n              if(e.target.value == ''){\r\n                setAddress(e.target.defaultValue) \r\n              }\r\n              else{\r\n                setAddress(e.target.value)\r\n              }\r\n          }} defaultValue={props.datavalues.address}/>\r\n         </Form.Group>\r\n         <Form.Group controlId=\"formGroupGender\">\r\n         <Form.Label>Gender</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Gender\" onChange={(e)=> {\r\n               if(e.target.value == ''){\r\n                setGender(e.target.defaultValue) \r\n              }\r\n              else{\r\n                setGender(e.target.value)\r\n              }\r\n          }} defaultValue={props.datavalues.gender}/>\r\n         </Form.Group>\r\n         <Form.Group controlId=\"formGroupClassname\">\r\n         <Form.Label>Class Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Class Name\" onChange={(e)=> {\r\n               if(e.target.value == ''){\r\n                setClassName(e.target.defaultValue) \r\n              }\r\n              else{\r\n                setClassName(e.target.value)\r\n              }\r\n          }} defaultValue={props.datavalues.class_name}/>\r\n         </Form.Group>\r\n         <Form.Group controlId=\"formGroupButton\">\r\n          <Form.Control className=\"btn btn-outline-primary\" type=\"button\" value=\"Save Changes\" onClick={()=>submitData()}/>\r\n         </Form.Group>\r\n         </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateForm;",{"ruleId":"88","severity":1,"message":"89","line":21,"column":3,"nodeType":"90","endLine":21,"endColumn":12,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":24,"column":32,"nodeType":"94","messageId":"95","endLine":24,"endColumn":34},{"ruleId":"96","severity":1,"message":"97","line":101,"column":17,"nodeType":"98","endLine":101,"endColumn":28},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"99","replacedBy":"105"},{"ruleId":"101","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"92","severity":1,"message":"111","line":26,"column":40,"nodeType":"94","messageId":"95","endLine":26,"endColumn":42},{"ruleId":"92","severity":1,"message":"111","line":56,"column":40,"nodeType":"94","messageId":"95","endLine":56,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":10,"column":12,"nodeType":"90","messageId":"114","endLine":10,"endColumn":14},{"ruleId":"112","severity":1,"message":"115","line":10,"column":16,"nodeType":"90","messageId":"114","endLine":10,"endColumn":21},{"ruleId":"92","severity":1,"message":"111","line":62,"column":33,"nodeType":"94","messageId":"95","endLine":62,"endColumn":35},{"ruleId":"92","severity":1,"message":"111","line":73,"column":33,"nodeType":"94","messageId":"95","endLine":73,"endColumn":35},{"ruleId":"92","severity":1,"message":"111","line":84,"column":34,"nodeType":"94","messageId":"95","endLine":84,"endColumn":36},{"ruleId":"92","severity":1,"message":"111","line":95,"column":33,"nodeType":"94","messageId":"95","endLine":95,"endColumn":35},{"ruleId":"92","severity":1,"message":"111","line":106,"column":34,"nodeType":"94","messageId":"95","endLine":106,"endColumn":36},{"ruleId":"92","severity":1,"message":"111","line":117,"column":34,"nodeType":"94","messageId":"95","endLine":117,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setStudentData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props] as a second argument to the useEffect Hook.","Identifier",["116"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],["117"],["118"],["117"],["118"],["117"],["118"],"Expected '===' and instead saw '=='.","no-unused-vars","'Id' is assigned a value but never used.","unusedVar","'setId' is assigned a value but never used.",{"desc":"119","fix":"120"},"no-global-assign","no-unsafe-negation","Add dependencies array: [props]",{"range":"121","text":"122"},[1000,1000],", [props]"]